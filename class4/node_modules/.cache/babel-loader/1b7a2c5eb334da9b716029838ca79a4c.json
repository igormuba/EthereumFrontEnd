{"ast":null,"code":"import _regeneratorRuntime from \"/Users/igormarcos/EthereumFrontEnd/class3/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/igormarcos/EthereumFrontEnd/class3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/igormarcos/EthereumFrontEnd/class3/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/igormarcos/EthereumFrontEnd/class3/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/igormarcos/EthereumFrontEnd/class3/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/igormarcos/EthereumFrontEnd/class3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/igormarcos/EthereumFrontEnd/class3/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/igormarcos/EthereumFrontEnd/class3/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { contract_address, contract_abi } from './contract';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.blockchainConnection();\n    }\n  }, {\n    key: \"blockchainConnection\",\n    value: function () {\n      var _blockchainConnection = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var web3, balance;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                web3 = new Web3(Web3.givenProvider);\n                _context.next = 3;\n                return web3.eth.getBalance('0xeB38D4269c2880d555A29D906A320DA2b340A675');\n\n              case 3:\n                balance = _context.sent;\n                console.log(balance);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function blockchainConnection() {\n        return _blockchainConnection.apply(this, arguments);\n      }\n\n      return blockchainConnection;\n    }()\n  }, {\n    key: \"MyBalance\",\n    value: function () {\n      var _MyBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, erc20token, myTokenAmount;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = new Web3(Web3.givenProvider);\n                erc20token = new web3.eth.Contract(contract_abi, contract_address);\n                _context2.next = 4;\n                return erc20token.methods.balanceOf('0xeB38D4269c2880d555A29D906A320DA2b340A675').call();\n\n              case 4:\n                myTokenAmount = _context2.sent;\n                return _context2.abrupt(\"return\", React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 27\n                  },\n                  __self: this\n                }, React.createElement(\"p\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 28\n                  },\n                  __self: this\n                }, myTokenAmount)));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function MyBalance() {\n        return _MyBalance.apply(this, arguments);\n      }\n\n      return MyBalance;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"teste\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/igormarcos/EthereumFrontEnd/class3/src/App.js"],"names":["React","Component","Web3","contract_address","contract_abi","App","blockchainConnection","web3","givenProvider","eth","getBalance","balance","console","log","erc20token","Contract","methods","balanceOf","call","myTokenAmount"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,gBAAR,EAA0BC,YAA1B,QAA6C,YAA7C;;AAEA,OAAO,WAAP;;IAGMC,G;;;;;;;;;;;;;yCAEgB;AAClB,WAAKC,oBAAL;AACD;;;;;;;;;;;;AAGKC,gBAAAA,I,GAAO,IAAIL,IAAJ,CAASA,IAAI,CAACM,aAAd,C;;uBACSD,IAAI,CAACE,GAAL,CAASC,UAAT,CAAoB,4CAApB,C;;;AAAhBC,gBAAAA,O;AACJC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMIJ,gBAAAA,I,GAAO,IAAIL,IAAJ,CAASA,IAAI,CAACM,aAAd,C;AACPM,gBAAAA,U,GAAa,IAAIP,IAAI,CAACE,GAAL,CAASM,QAAb,CAAsBX,YAAtB,EAAoCD,gBAApC,C;;uBACSW,UAAU,CAACE,OAAX,CAAmBC,SAAnB,CAA6B,4CAA7B,EAA2EC,IAA3E,E;;;AAAtBC,gBAAAA,a;kDAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAKA,aAAL,CADF,C;;;;;;;;;;;;;;;;;;6BAME;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,CADF;AAKD;;;;EA/BelB,S;;AAkClB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport {contract_address, contract_abi} from './contract'\nimport logo from './logo.svg';\nimport './App.css';\n\n\nclass App extends Component {\n\n  componentWillMount(){\n    this.blockchainConnection()\n  }\n\n  async blockchainConnection(){\n    let web3 = new Web3(Web3.givenProvider);\n    let balance = await web3.eth.getBalance('0xeB38D4269c2880d555A29D906A320DA2b340A675');\n    console.log(balance);\n    \n    \n  }\n\n  async MyBalance(){\n    let web3 = new Web3(Web3.givenProvider);\n    let erc20token = new web3.eth.Contract(contract_abi, contract_address)\n    let myTokenAmount = await erc20token.methods.balanceOf('0xeB38D4269c2880d555A29D906A320DA2b340A675').call()\n    return (\n        <div>\n          <p>{ myTokenAmount }</p>\n        </div>\n      );\n  }\n\n  render(){\n    return(\n      <div>\n      <p>teste</p>\n      </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}