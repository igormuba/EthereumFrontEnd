{"ast":null,"code":"import _regeneratorRuntime from \"/Users/igormarcos/EthereumFrontEnd/class5/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/igormarcos/EthereumFrontEnd/class5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/igormarcos/EthereumFrontEnd/class5/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/igormarcos/EthereumFrontEnd/class5/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/igormarcos/EthereumFrontEnd/class5/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/igormarcos/EthereumFrontEnd/class5/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/igormarcos/EthereumFrontEnd/class5/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/igormarcos/EthereumFrontEnd/class5/src/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport { contract_address, contract_abi } from \"./contract\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/header/header\";\nimport AccountDetails from \"./components/accountDetails/accountDetails\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.blockchainConnection();\n    }\n  }, {\n    key: \"blockchainConnection\",\n    value: function () {\n      var _blockchainConnection = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var web3, accounts, balance, erc20token, myTokenAmount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                web3 = new Web3(Web3.givenProvider);\n                _context.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context.sent;\n                _context.next = 6;\n                return web3.eth.getBalance(accounts[0]);\n\n              case 6:\n                balance = _context.sent;\n                erc20token = new web3.eth.Contract(contract_abi, contract_address);\n                _context.next = 10;\n                return erc20token.methods.balanceOf(accounts[0]).call();\n\n              case 10:\n                myTokenAmount = _context.sent;\n                myTokenAmount = myTokenAmount ? myTokenAmount : 0;\n                this.setState({\n                  account: accounts[0],\n                  balance: parseInt(myTokenAmount)\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function blockchainConnection() {\n        return _blockchainConnection.apply(this, arguments);\n      }\n\n      return blockchainConnection;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      balance: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(AccountDetails, {\n        account: this.state.account,\n        balance: this.state.balance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/igormarcos/EthereumFrontEnd/class5/src/App.js"],"names":["React","Component","Web3","contract_address","contract_abi","Header","AccountDetails","App","blockchainConnection","web3","givenProvider","eth","getAccounts","accounts","getBalance","balance","erc20token","Contract","methods","balanceOf","call","myTokenAmount","setState","account","parseInt","props","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,YAA/C;;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;;IAEMC,G;;;;;;;yCACiB;AACnB,WAAKC,oBAAL;AACD;;;;;;;;;;;;AAGKC,gBAAAA,I,GAAO,IAAIP,IAAJ,CAASA,IAAI,CAACQ,aAAd,C;;uBACUD,IAAI,CAACE,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;;uBACgBJ,IAAI,CAACE,GAAL,CAASG,UAAT,CAAoBD,QAAQ,CAAC,CAAD,CAA5B,C;;;AAAhBE,gBAAAA,O;AACAC,gBAAAA,U,GAAa,IAAIP,IAAI,CAACE,GAAL,CAASM,QAAb,CAAsBb,YAAtB,EAAoCD,gBAApC,C;;uBACSa,UAAU,CAACE,OAAX,CAAmBC,SAAnB,CAA6BN,QAAQ,CAAC,CAAD,CAArC,EAA0CO,IAA1C,E;;;AAAtBC,gBAAAA,a;AACJA,gBAAAA,aAAa,GAAGA,aAAa,GAAGA,aAAH,GAAmB,CAAhD;AACA,qBAAKC,QAAL,CAAc;AACZC,kBAAAA,OAAO,EAAEV,QAAQ,CAAC,CAAD,CADL;AAEZE,kBAAAA,OAAO,EAAES,QAAQ,CAACH,aAAD;AAFL,iBAAd;;;;;;;;;;;;;;;;;;AAMF,eAAYI,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXX,MAAAA,OAAO,EAAE;AADE,KAAb;AAFiB;AAKlB;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,cAAD;AACE,QAAA,OAAO,EAAE,KAAKW,KAAL,CAAWH,OADtB;AAEE,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWX,OAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AASD;;;;EAnCed,S;;AAsClB,eAAeM,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport { contract_address, contract_abi } from \"./contract\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/header/header\";\nimport AccountDetails from \"./components/accountDetails/accountDetails\";\n\nclass App extends Component {\n  componentWillMount() {\n    this.blockchainConnection();\n  }\n\n  async blockchainConnection() {\n    let web3 = new Web3(Web3.givenProvider);\n    let accounts = await web3.eth.getAccounts();\n    let balance = await web3.eth.getBalance(accounts[0]);\n    let erc20token = new web3.eth.Contract(contract_abi, contract_address);\n    let myTokenAmount = await erc20token.methods.balanceOf(accounts[0]).call();\n    myTokenAmount = myTokenAmount ? myTokenAmount : 0;\n    this.setState({\n      account: accounts[0],\n      balance: parseInt(myTokenAmount)\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      balance: 0\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <AccountDetails\n          account={this.state.account}\n          balance={this.state.balance}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}